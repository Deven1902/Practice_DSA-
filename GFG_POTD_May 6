/*

GFG POTD 

Date : 06/05/2023

Problem : Another Coin Change Problem

Difficulty : Medium

Problem Link : https://practice.geeksforgeeks.org/problems/09b910559335521654aa2909f86f893447d8f5ba/1

Given three integers n, k, target, and an array of coins of size n. 
Find if it is possible to make a change of target cents by using an infinite supply of 
each coin but the total number of coins used must be exactly equal to k.

CPP solution below ðŸ‘‡ðŸ‘‡
*/

// Dyanamic Programing. 

// solved using iterative DP. 

int dp[101][1001][101];

class Solution {
  public:
  
    bool makeChanges(int N, int K, int target, vector<int> &coins) {
        // code here
        
        for(int i = 0; i < N + 1; i++) {
            for(int j = 0; j < target + 1; j++) {
                for(int k = 0;k < K + 1; k++) {
                    if(i == 0) {
                        dp[i][j][k] = j == 0 and k == 0;
                        continue;
                    }
                    
                    int x, y;
                    x = y = 0;
                    
                    x = dp[i - 1][j][k];
                    if(j >= coins[i - 1] and k)
                        y = dp[i][j - coins[i - 1]][k - 1];
                    
                    dp[i][j][k] = x + y;
                }
            }
        }
        
        return dp[N][target][K];
    }
};
